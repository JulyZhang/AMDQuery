<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <link href="css/reset.css" rel="stylesheet" type="text/css" />
    <style>
        #test
        {
            background: #0000FF;
            width: 100px;
            height: 100px;
        }
    </style>
    <script src="myquery/myquery.js" type="text/javascript" myquery="define:$;amd:0;"
        amd="detectCR:1;"></script>
    <script type="text/javascript">
        $.require(["base/object"], function (object) {
            var Supper = function (show, todo) {
                this.arg1 = show;
                this.arg2 = todo;
            }
            Supper.prototype = {
                constructor: Supper
                , show: function () {
                    document.write("supper.show:" + this.arg1 + "<br>");
                }
                , todo: function () {
                    document.write("supper.todo:" + this.arg2 + "<br>");
                }
            }


            var Child = object.Class({
                init: function (show) {
                    this.arg1 = show;
                    return this;
                },
                render: function () {
                    this.show();
                    this.todo();
                },
                show: function () {
                    document.write("child.show:" + this.arg1 + "<br>");
                }
            }, Supper, "Child"),
            child = new Child(["childArg"], ["supperArg", "supperTo"]);

            document.write("constructor:" + child.constructor.toString() + "<br>");
            document.write("<br>");
            document.write("code:" + "<br>");
        });
    </script>
</head>
<body style="overflow: auto">
    <pre>
         $.require(["base/object"], function (object) {
            var Supper = function (show, todo) {
                this.arg1 = show;
                this.arg2 = todo;
            }
            Supper.prototype = {
                constructor: Supper
                , show: function () {
                    document.write("supper.show:" + this.arg1);
                }
                , todo: function () {
                    document.write("supper.todo:" + this.arg2);
                }
            }


            var Child = object.Class({
                init: function (show) {
                    this.arg1 = show;
                    return this;
                },
                render: function () {
                    this.show();
                    this.todo();
                },
                show: function () {
                    document.write("child.show:" + this.arg1);
                }
            }, Supper, "Child"),
            child = new Child(["childArg"], ["supperArg", "supperTo"]);

            document.write("constructor:" + child.constructor.toString());
            
        });
    </pre>
</body>
</html>
